#!/usr/bin/perl

use FindBin;
use lib "$FindBin::Bin/../lib/superglue/perl5";

use Data::Dumper;
use ScriptDie;
use Superglue;
use XML::RPC;

my %opt = Superglue::getopt;
my %creds = Superglue::load_kv $opt{creds};
my %d = Superglue::read_delegation;

my $r;
my $api = XML::RPC->new($creds{url});

sub api_get {
	my $method = shift;
	$r = $api->call($method, $creds{apikey}, $opt{zone});
	sdie "$opt{zone} $method: $r->{faultString}" if $r->{faultString};
	return $r;
}
my @ns = @{api_get('domain.info')->{nameservers}};
for my $ns (sort @ns) {
	debug "$opt{zone} NS $ns";
}
my @glue = @{api_get('domain.host.list')};
for my $ns (sort { $a->{name} cmp $b->{name} } @glue) {
	for my $a (sort @{$ns->{ips}}) {
		debug "$ns A $a"    if $a =~ $Superglue::re_ipv4;
		debug "$ns AAAA $a" if $a =~ $Superglue::re_ipv6;
	}
}
my @keys = @{api_get('domain.dnssec.list')};
for my $key (@keys) {
	debug "$opt{zone} DNSKEY $key->{flags} 3 $key->{algorithm} $key->{public_key}";
}


__END__

=head1 NAME

superglue-gandi - synchronize DNS delegation with Gandi

=head1 SYNOPSIS

B<superglue-gandi> [B<--debug>|B<-d>] [B<--verbose>|B<-v>]
    [B<--not-really>|B<-n>] B<--creds>=I<file>|B<-c>I<file> I<domain>

B<superglue-gandi> B<-h>|B<--help>

=head1 DESCRIPTION

