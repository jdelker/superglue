#!/usr/bin/perl

=head1 NAME

superglue - update domain name registrations

=head1 SYNOPSIS

superglue [options]

=head2 Superglue options

  [--contact <filename.yml>]    desired contact details
  [--debug]                     detailed trace
  [--delegation <filename.db>]  desired delegation records
  [-h]                          short usage message
  [--help]                      display manual
   --login <filename.yml>       credentials
  [--not-really]                do everything except make changes
  [--verbose]                   print old and new registration
   --zone <example.com>         domain to be updated

=head2 WebDriver options

  [--foreground]             Visible browser (default is headless)
  [--reconnect]              Do not start new WebDriver server
  [--retain]                 Do not quit the browser on exit
  [--session <uuid>]         Use existing browser and WebDriver server
  [--host <127.0.0.1>]       WebDriver server host name
  [--port <4444>]            WebDriver server port number

=head1 DESCRIPTION

Superglue is a collection of scripts for updating domain name
registration details.

This manual describes the features of Superglue that are common to all
the scripts. The manuals for each script describes the details that
are specific to that script:

=over

=item B<superglue-janet>

=item B<superglue-mythic-beasts>

=item B<superglue-ripe>

=back

The B<superglue> program is a wrapper that invokes the right Superglue
script as specified by the C<--login> option. See under L</"Login
credentials"> below.

The L<Superglue(3pm)> library has documentation on writing new
Superglue scripts.

=head2 Login credentials

Superglue uses L<ReGPG::Login> to read login credentials.

The C<--login $filename> is in L<YAML> format and contains non-secret
information such as a URL, a username, commentary, etc.

There should be a C<superglue:> item which names the Superglue script
that can use these credentials. It is used by the B<superglue> program
to invoke the right script, and when a Superglue script is invoked
directly it is used to ensure that secrets are not accidentally leaked
to third parties.

Encrypted secrets are referred to under a nested C<gpg_d:> item. Each
C<gpg_d> sub-item refers to a gpg-encrypted file containing a bare
secret, which is decrypted as required. See L<ReGPG::Login> for details.

For example, if there were a hypothetical C<superglue-wombat> script,
you would invoke it with the command C<superglue --login wombat.yml
...>, where the file C<wombat.yml> contains something like:

	# our main registrar account with Wombat Domains, Inc.
	---
	superglue: wombat
	url: https://wombat.example/login
	username: wizard
	gpg_d:
	  password: wombat.asc

=cut

use strictures 2;
use warnings;

use Pod::Usage;
use YAML;

my $login;
for my $arg (@ARGV) {
	if ($login) {
		my $yml = YAML::LoadFile $arg;
		die "$arg: missing field 'superglue'\n"
		    unless $yml->{superglue};
		my $script = "$0-".$yml->{superglue};
		exec $script, @ARGV;
		exit 1;
	} elsif ($arg eq '--login') {
		$login = 1;
	} elsif ($arg eq '--help') {
		pod2usage -exit => 0, -verbose => 2;
	}
}

print STDERR <<USAGE;
Name:
  Superglue - update domain name registrations

Usage:
  superglue-janet <...>
  superglue-mythic-beasts <...>
  superglue-ripe <...>

USAGE
exit 1;

=head1 AUTHOR

Written by Tony Finch <fanf2@cam.ac.uk> <dot@dotat.at>
at Cambridge University Information Services.
L<https://opensource.org/licenses/0BSD>

=head1 SEE ALSO

L<superglue-janet(1)>

L<superglue-mythic-beasts(1)>

L<superglue-ripe(1)>

L<ReGPG::Login>, L<Superglue(3pm)>,
L<Superglue::Contact>, L<Superglue::Delegation>,
L<Superglue::Restful(3pm)>, L<Superglue::WebDriver>

=cut
