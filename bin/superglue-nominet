#!/usr/bin/perl

use warnings;
use strict;

use FindBin;
use lib "$FindBin::Bin/../lib/superglue/perl5";

use Data::Dumper;
use Net::EPP::Simple;
use ScriptDie;
use Superglue;

my %opt = Superglue::getopt;
my %creds = Superglue::load_kv $opt{creds};
my %d = Superglue::read_delegation $opt{zone};

my $z = $opt{zone};
for my $k (qw(host user pass)) {
	sdie "$opt{creds}: missing $k in credentials" unless $creds{$k};
}

sub eepp {
	sdie "@_: $Net::EPP::Simple::Error $Net::EPP::Simple::Message";
}

my $epp = Net::EPP::Simple->new(
	host	=> $creds{host},
	user	=> $creds{user},
	pass	=> $creds{pass},
	stdobj	=> 1,
	stdext	=> 1,
	verify	=> 1,
	ca_path	=> '/etc/ssl/certs',
	debug   => $opt{debug},
);
eepp "login" unless defined $epp;

my $info = $epp->domain_info($z, undef, undef);
eepp "domain_info $z" unless defined $info;

sub trim {
	s{\.*\s*$}{.} for @_;
	return @_;
}

my @apex = @{$d{NS}};
my @deleg = @{$info->{ns}};
debug "$z NS $_" for @deleg;

my (%apex,%deleg);
@apex{@apex} = @apex;
@deleg{@deleg} = @deleg;

for my $ns (@apex) {
	if (exists $apex{$ns} and exists $deleg{$ns}) {
		delete $apex{$ns};
		delete $deleg{$ns};
	}
}
my @add = keys %apex;
my @rem = keys %deleg;

if (@add or @rem) {
	swarn "add $z NS $_" for @add;
	swarn "rem $z NS $_" for @rem;
	my $update_info = { name => $z };
	$update_info->{add}->{ns} = \@add if @add;
	$update_info->{rem}->{ns} = \@rem if @rem;
	if ($opt{'not-really'}) {
		swarn "Not really!";
	} else {
		$epp->update_domain($update_info) or
		    eepp "domain_update $z";
		swarn "$z: $Net::EPP::Simple::Error $Net::EPP::Simple::Message";
	}
} else {
	verbose "$z: name server delegation matches";
}

swarn "$z: secure delegation update not yet implemented" if $d{DNSKEY};

__END__

=head1 NAME

superglue-nominet - synchronize DNS delegation with Nominet

=head1 SYNOPSIS

B<superglue-nominet> [B<--debug>|B<-d>] [B<--verbose>|B<-v>]
    [B<--not-really>|B<-n>] B<--creds>=I<file>|B<-c>I<file> I<domain>

B<superglue-nominet> B<-h>|B<--help>

=head1 DESCRIPTION
